{"version":3,"sources":["components/ErrorView.js","components/ActionButtons.js","App.js","index.js"],"names":["ErrorView","_ref","onRetry","_jsx","className","children","onClick","alt","src","ActionButtons","onCancel","onUpdate","_jsxs","App","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","setData","_useState7","_useState8","lists","setLists","_useState9","_useState10","listOrder","setListOrder","_useState11","_useState12","selectedLists","setSelectedLists","_useState13","_useState14","newListView","setNewListView","_useState15","_useState16","setNewListKey","_useState17","_useState18","showCreateNewList","setShowCreateNewList","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_lists","groupedLists","sortedListNumbers","wrap","_context","prev","next","axios","get","sent","data","reduce","acc","item","list_number","push","Object","keys","sort","a","b","t0","stop","apply","arguments","handleMoveItem","fromList","toList","length","undefined","prevLists","updatedLists","_objectSpread","updatedFromList","filter","i","id","some","_defineProperty","prevOrder","includes","concat","_toConsumableArray","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","_Fragment","type","_selectedLists$sort","_selectedLists$sort2","firstList","newListKey","Math","max","map","Number","toString","newOrder","inserted","forEach","key","reorderedLists","insertIndex","indexOf","splice","document","getElementById","textContent","listNumber","_lists$listNumber","_lists$listNumber2","name","description","checked","onChange","updatedSelection","num","handleListSelection","htmlFor","ReactDOM","render","React","StrictMode"],"mappings":"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","file":"static/js/main.a3839a2a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\n\nconst ErrorView = ({ onRetry }) => {\n  return (\n    <div className=\"error-view\">\n      <button onClick={onRetry}>\n        <img\n          alt=\"error view\"\n          src=\"https://assets.ccbp.in/frontend/content/react-js/list-creation-failure-lg-output.png\"\n        />\n      </button>\n    </div>\n  );\n};\n\nexport default ErrorView;\n","import React from \"react\";\nimport \"./index.css\";\n\nconst ActionButtons = ({ onCancel, onUpdate }) => {\n  return (\n    <div className=\"actions\">\n      <button onClick={onCancel}>Cancel</button>\n      <button onClick={onUpdate}>Update</button>\n    </div>\n  );\n};\n\nexport default ActionButtons;\n","import React, { useState, useEffect } from \"react\";\nimport { RotatingLines } from \"react-loader-spinner\";\nimport axios from \"axios\";\nimport ErrorView from \"./components/ErrorView\";\nimport ActionButtons from \"./components/ActionButtons\";\nimport \"./App.css\";\n\nconst API_URL = \"https://apis.ccbp.in/list-creation/lists\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState([]);\n  const [lists, setLists] = useState({});\n  const [listOrder, setListOrder] = useState([]);\n  const [selectedLists, setSelectedLists] = useState([]);\n  const [newListView, setNewListView] = useState(false);\n  const [newListKey, setNewListKey] = useState(null);\n  const [showCreateNewList, setShowCreateNewList] = useState(true);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    setLoading(true);\n    setError(false);\n    try {\n      const response = await axios.get(API_URL);\n      const { lists } = response.data;\n      const groupedLists = lists.reduce((acc, item) => {\n        if (!acc[item.list_number]) {\n          acc[item.list_number] = [];\n        }\n        acc[item.list_number].push(item);\n        return acc;\n      }, {});\n\n      const sortedListNumbers = Object.keys(groupedLists).sort((a, b) => a - b);\n      setData(lists);\n      setLists(groupedLists);\n      setListOrder(sortedListNumbers);\n      setLoading(false);\n    } catch (err) {\n      setError(true);\n      setLoading(false);\n    }\n  };\n\n  const handleListSelection = (listNumber) => {\n    const updatedSelection = selectedLists.includes(listNumber)\n      ? selectedLists.filter((num) => num !== listNumber)\n      : [...selectedLists, listNumber];\n    setSelectedLists(updatedSelection);\n  };\n\n  const handleCreateNewList = () => {\n    if (selectedLists.length !== 2) {\n      let alertForCheckEl = document.getElementById(\"alertForCheck\");\n      alertForCheckEl.textContent =\n        \"*You should select exactly 2 lists to create a new list\";\n      return;\n    }\n\n    setShowCreateNewList(false);\n    const [firstList, secondList] = selectedLists.sort((a, b) => a - b);\n    const nextListNumber = Math.max(...Object.keys(lists).map(Number)) + 1;\n    const newListKey = nextListNumber.toString();\n    setNewListKey(newListKey);\n\n    setLists((prev) => {\n      const updatedLists = { ...prev };\n      const newOrder = [];\n\n      let inserted = false;\n      Object.keys(updatedLists)\n        .sort((a, b) => a - b)\n        .forEach((key) => {\n          newOrder.push(key);\n          if (key === firstList.toString() && !inserted) {\n            newOrder.push(newListKey);\n            inserted = true;\n          }\n        });\n\n      const reorderedLists = {};\n      newOrder.forEach((key) => {\n        reorderedLists[key] = updatedLists[key] || [];\n      });\n      reorderedLists[newListKey] = [];\n\n      return reorderedLists;\n    });\n\n    setListOrder((prevOrder) => {\n      const newOrder = [...prevOrder];\n      const insertIndex = newOrder.indexOf(firstList.toString()) + 1;\n      newOrder.splice(insertIndex, 0, newListKey);\n      return newOrder;\n    });\n\n    setNewListView(true);\n  };\n\n  const handleMoveItem = (item, fromList, toList = \"3\") => {\n    setLists((prevLists) => {\n      const updatedLists = { ...prevLists };\n\n      // Remove the item from the source list\n      const updatedFromList = (updatedLists[fromList] || []).filter(\n        (i) => i.id !== item.id\n      );\n\n      // Ensure the target list exists in the lists object\n      if (!updatedLists[toList]) {\n        updatedLists[toList] = [];\n      }\n\n      // Add the item to the target list\n      if (!updatedLists[toList].some((i) => i.id === item.id)) {\n        updatedLists[toList].push(item);\n      }\n\n      // Return the updated lists\n      return {\n        ...updatedLists,\n        [fromList]: updatedFromList, // Update the source list\n      };\n    });\n\n    // Ensure List 3 is included in the list order\n    setListOrder((prevOrder) => {\n      if (!prevOrder.includes(toList)) {\n        return [...prevOrder, toList];\n      }\n      return prevOrder;\n    });\n  };\n  const handleCancel = () => {\n    setShowCreateNewList(true);\n    setNewListView(false);\n    setSelectedLists([]);\n    fetchData();\n  };\n\n  const handleUpdate = () => {\n    setShowCreateNewList(true);\n    setNewListView(false);\n    setSelectedLists([]);\n\n    setLists((prevLists) => {\n      const updatedLists = { ...prevLists };\n      if (updatedLists[\"3\"]) {\n        updatedLists[\"3\"] = [...updatedLists[\"3\"]];\n      }\n      return updatedLists;\n    });\n\n    setListOrder((prevOrder) => {\n      return [...prevOrder];\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      {loading ? (\n        <div className=\"loader\">\n          <RotatingLines\n            strokeColor=\"grey\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"96\"\n            visible={true}\n          />\n        </div>\n      ) : error ? (\n        <ErrorView onRetry={fetchData} />\n      ) : (\n        <div className=\"main-container\">\n          <div className=\"head-btn-container\">\n            {showCreateNewList && (\n              <>\n                <h1 className=\"main-heading\">List Creation</h1>\n                <button\n                  type=\"button\"\n                  className=\"add-new-list-button\"\n                  onClick={handleCreateNewList}\n                >\n                  Create a New List\n                </button>\n              </>\n            )}\n            <span id=\"alertForCheck\"></span>\n          </div>\n\n          <div className={`lists-container ${newListView ? \"row\" : \"\"}`}>\n            {newListView ? (\n              <div>\n                <div className=\"list-creation-view\">\n                  {listOrder.map((listNumber) => (\n                    <div key={listNumber} className=\"list-container\">\n                      <h3>\n                        List {listNumber} ({lists[listNumber]?.length || 0}{\" \"}\n                        items)\n                      </h3>\n                      <div className=\"list-item-container\">\n                        {lists[listNumber]?.map((item) => (\n                          <div key={item.id} className=\"list-item\">\n                            <span className=\"name\">{item.name}</span>\n                            <span className=\"description\">\n                              {item.description}\n                            </span>\n\n                            {/* Arrow buttons for moving items */}\n                            <div className=\"arrow-buttons\">\n                              {listNumber === \"1\" && (\n                                <button\n                                  className=\"arrow\"\n                                  onClick={() => handleMoveItem(item, \"1\", \"3\")}\n                                >\n                                  →\n                                </button>\n                              )}\n                              {listNumber === \"2\" && (\n                                <button\n                                  className=\"arrow\"\n                                  onClick={() => handleMoveItem(item, \"2\", \"3\")}\n                                >\n                                  ←\n                                </button>\n                              )}\n                              {listNumber === \"3\" && (\n                                <div className=\"arrow-buttons-row\">\n                                  <button\n                                    className=\"arrow start-arrow\"\n                                    onClick={() =>\n                                      handleMoveItem(item, \"3\", \"1\")\n                                    }\n                                  >\n                                    ←\n                                  </button>\n                                  <button\n                                    className=\"arrow end-arrow\"\n                                    onClick={() =>\n                                      handleMoveItem(item, \"3\", \"2\")\n                                    }\n                                  >\n                                    →\n                                  </button>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n\n                <ActionButtons\n                  onCancel={handleCancel}\n                  onUpdate={handleUpdate}\n                />\n              </div>\n            ) : (\n              <>\n                <div className=\"list-selection\">\n                  {listOrder.map((listNumber) => (\n                    <div key={listNumber} className=\"list-container\">\n                      <div className=\"check-heading\">\n                        <input\n                          id={`myCheckbox + ${listNumber}`}\n                          type=\"checkbox\"\n                          checked={selectedLists.includes(listNumber)}\n                          onChange={() => handleListSelection(listNumber)}\n                        />\n                        <label\n                          htmlFor={`myCheckbox + ${listNumber}`}\n                          className=\"list-head\"\n                        >\n                          List {listNumber}\n                        </label>\n                      </div>\n                      {lists[listNumber].map((item) => (\n                        <div className=\"list-item\" key={item.id}>\n                          <span className=\"name\">{item.name}</span>\n                          <span className=\"description\">\n                            {item.description}\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}